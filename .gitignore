# Created by https://www.gitignore.io

node_modules/
bower_components/
AP.TestResults/
AP.packages/
UserPortal/Tests/coverage/
AdminPortal/tests/coverage/
Auth/coverage/
AdminPortal/Admin/Views/Home/_AppInsights.cshtml
AdminPortal/Admin/Views/Home/_ConfigurationService.cshtml
AdminPortal/App/main-built.js
AdminPortal/AppCRM/main-crm-built.js
AdminPortal/AppCRM/QHCRMDashboard.html
AdminPortal/Content/admin-site.min.css
AdminPortal/App/main-built*.js
AdminPortal/dist/
AdminPortal/Content/admin-site*.min.css
UserPortal.packages/
UserPortal/dist/
UserPortal/Views/_AppInsights.cshtml
QuickHelp.Laser/Views/_AppInsights.cshtml
QuickHelp.Laser/Views/_ConfigurationService.cshtml
Frontend/dist/
Auth/dist/
Frontend/dist/
UserPortal/templates/
Auth/templates/
Binaries/
*.sublime-workspace
qh.sublime-project
configuration/*.template.xml
configuration/values/*local.config*
App.config
app.config
UserPortal/Web.config
AdminPortal/Web.config
CustomerAPI/Web.config
Auth/Web.config
YammerPortal/Web.config
QuickHelp.WebJobs.Hangfire/Web.config
QuickHelp.Laser/Web.config
*.orig
QuickHelp.WebJobs.NotificationService/App.config

UserPortal/NLog.config
CustomerAPI/NLog.config
AdminPortal/NLog.config
YammerPortal/NLog.config
QuickHelp.WebJobs.Hangfire/NLog.config
QuickHelp.WebJobs.SendEmail/NLog.config
QuickHelp.WebJobs.NotificationService/NLog.config
QuickHelp.Laser/NLog.config
QuickHelp.Laser/dist/
QuickHelp.Storm/NLog.config
QuickHelp.Storm/SubmitConfig.xml
*html-bundle.js
*Bundle.css
*Bundle.js
*bundle.js
test-results.xml
jshint_analysis.json
CustomerAPI/App_Data/XmlDocument.xml

UserPortal/App/common/services/configurationService.js
UserPortal/cache.txt

# it is autogenerated from Frontend
UserPortal/laserRedirect.js

AdminPortal/coverage/

AdminPortal/cache.txt
QuickHelp.Laser/cache.txt
AdminPortal/App/admin/helpers/signalrHub.js
AdminPortal/App/admin/helpers/localStorageProvider.js
AdminPortal/App/admin/helpers/audioService.js
AdminPortal/App/admin/helpers/authCheckerService.js
*Frontend/Common/services/configurationService.js
Frontend/gulpConfigurationService.js
Integration/SharePoint/QuickHelpSharePoint/App/services/configurationService.js
AdminPortal/gulpConfigurationService.js
AdminPortal/AppCRM/main-crm-built.js-temp

### VisualStudio ###
## Ignore Visual Studio temporary files, build results, and
## files generated by popular Visual Studio add-ons.

# User-specific files
*.suo
*.user
*.userosscache
*.sln.docstates

# Build results
[Dd]ebug/
[Dd]ebugPublic/
[Rr]elease/
[Rr]eleases/
build/
bld/
[Bb]in/
[Oo]bj/

# Roslyn cache directories
*.ide/
.vs/
.vscode/


# MSTest test Results
[Tt]est[Rr]esult*/
[Bb]uild[Ll]og.*

#NUNIT
*.VisualState.xml
TestResult.xml

# Build Results of an ATL Project
[Dd]ebugPS/
[Rr]eleasePS/
dlldata.c

*_i.c
*_p.c
*_i.h
*.ilk
*.meta
*.obj
*.pch
*.pdb
*.pgc
*.pgd
*.rsp
*.sbr
*.tlb
*.tli
*.tlh
*.tmp
*.tmp_proj
*.log
*.vspscc
*.vssscc
.builds
*.pidb
*.svclog
*.scc

# Chutzpah Test files
_Chutzpah*

# Visual C++ cache files
ipch/
*.aps
*.ncb
*.opensdf
*.sdf
*.cachefile

# Visual Studio profiler
*.psess
*.vsp
*.vspx

# Rider files

.idea/

# TFS 2012 Local Workspace
$tf/

# Guidance Automation Toolkit
*.gpState

# ReSharper is a .NET coding add-in
_ReSharper*/
*.[Rr]e[Ss]harper
*.DotSettings.user

# JustCode is a .NET coding addin-in
.JustCode

# TeamCity is a build add-in
_TeamCity*

# DotCover is a Code Coverage Tool
*.dotCover

# NCrunch
_NCrunch_*
.*crunch*.local.xml

# MightyMoose
*.mm.*
AutoTest.Net/

# Web workbench (sass)
.sass-cache/

# Installshield output folder
[Ee]xpress/

# DocProject is a documentation generator add-in
DocProject/buildhelp/
DocProject/Help/*.HxT
DocProject/Help/*.HxC
DocProject/Help/*.hhc
DocProject/Help/*.hhk
DocProject/Help/*.hhp
DocProject/Help/Html2
DocProject/Help/html

# Click-Once directory
publish/

# Publish Web Output
*.[Pp]ublish.xml
# TODO: Comment the next line if you want to checkin your web deploy settings
# but database connection strings (with potential passwords) will be unencrypted
*.pubxml
*.publishproj

# NuGet Packages
*.nupkg
# The packages folder can be ignored because of Package Restore
**/packages/*
# except build/, which is used as an MSBuild target.
!**/packages/build/
# If using the old MSBuild-Integrated Package Restore, uncomment this:
#!**/packages/repositories.config

# Windows Azure Build Output
csx/
*.build.csdef

# Windows Store app package directory
AppPackages/

# Others
*.Cache
ClientBin/
[Ss]tyle[Cc]op.*
~$*
*~
*.dbmdl
*.dbproj.schemaview
*.publishsettings
!**/WindowsAzureCredentials.publishsetting
!**/Small Core + SQL-Windows Azure Enterprise-2-15-2017-credentials.publishsettings
node_modules/
bower_components/

# RIA/Silverlight projects
Generated_Code/

# Backup & report files from converting an old project file
# to a newer Visual Studio version. Backup files are not needed,
# because we have git ;-)
_UpgradeReport_Files/
Backup*/
UpgradeLog*.XML
UpgradeLog*.htm

# SQL Server files
*.mdf
*.ldf

# Database project temp files
SQLDB/**/*.jfm

# Business Intelligence projects
*.rdl.data
*.bim.layout
*.bim_*.settings

# Microsoft Fakes
FakesAssemblies/


### Windows ###
# Windows image file caches
Thumbs.db
ehthumbs.db

# Folder config file
Desktop.ini

# Recycle Bin used on file shares
$RECYCLE.BIN/

# Windows Installer files
*.cab
*.msi
*.msm
*.msp

# Windows shortcuts
*.lnk

/Auth/Tests/coverage
/SAML2/SAML2.nuspec

# it will be generated with config files
/Frontend/serviceBus.conf.js

/Frontend/checkstyle-result.xml
/AdminPortal/checkstyle-result.xml

# added another karma config in usual format
# to start server directly through karma.start
/Frontend/karma.config.js
/UserPortal/ApplicationInsights.config
/LaserFrontend/libs/reactScrollbar/examples/
/LaserFrontend/libs/reactScrollbar/buildinstall.sh
/LaserFrontend/gulpConfigurationService.js
/LaserFrontend/dist/

# azure deployment configs
/QuickHelp.AdminPortal.AzureDeployment/ServiceDefinition.csdef
/QuickHelp.AdminPortal.AzureDeployment/ServiceConfiguration.Cloud.cscfg
/QuickHelp.UserPortal.AzureDeployment/ServiceDefinition.csdef
/QuickHelp.UserPortal.AzureDeployment/ServiceConfiguration.Cloud.cscfg
/QuickHelp.WebJobs.AzureDeployment/ServiceDefinition.csdef
/QuickHelp.WebJobs.AzureDeployment/ServiceConfiguration.Cloud.cscfg

/LaserFrontend/coverage
/LaserFrontend/.idea

# to visualise the webpack dependency tree
# run "webpack --profile --json > stats.json"
# in the folder where webpack config file is
# than go to "https://webpack.github.io/analyse/"
# and upload generated output
/LaserFrontend/stats.json

# Approval tests result
*.received.txt
/QuickHelp.Laser/ApplicationInsights.config
/QuickHelp.WebJobs.Hangfire/ApplicationInsights.config
/AdminPortal/ApplicationInsights.config
/CustomerAPI/ApplicationInsights.config
/QuickHelp.WebJobs.NotificationService/ApplicationInsights.config
/QuickHelp.WebJobs.SendEmail/ApplicationInsights.config

/AzureFunctions/QuickHelp.AzureFunctions/local.settings.json
/QuickHelp.WebJobs.DataExport/ApplicationInsights.config
/QuickHelp.WebJobs.DataExport/NLog.config
/Brainstorm.Rest/Tests/Output/netcoreapp2.1/netcoreapp2.1
